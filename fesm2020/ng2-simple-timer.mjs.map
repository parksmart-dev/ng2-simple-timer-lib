{"version":3,"file":"ng2-simple-timer.mjs","sources":["../../../projects/ng2-simple-timer/src/lib/ng2-simple-timer.service.ts","../../../projects/ng2-simple-timer/src/public-api.ts","../../../projects/ng2-simple-timer/src/ng2-simple-timer.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subscription, timer } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\n\ninterface TimerList {\n\t[name: string]: {\n\t\tsecond: number,\n\t\tt: Observable<any>\n\t};\n}\n\ninterface SubscriptionList {\n\t[id: string]: {\n\t\tname: string,\n\t\tsubscription: Subscription\n\t};\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SimpleTimer {\n\n\tprivate timers: TimerList = {};\n\tprivate subscription: SubscriptionList = {};\n\n\tgetTimer(): string[] {\n\t\treturn Object.keys(this.timers);\n\t}\n\tgetSubscription(): string[] {\n\t\treturn Object.keys(this.subscription);\n\t}\n\tnewTimer(name: string, sec: number, delay: boolean = false): boolean {\n\t\tif (name === undefined || sec === undefined || this.timers[name]) {\n\t\t\treturn false;\n\t\t}\n\t\tlet t: Observable<any>\n\t\tif (delay) {\n\t\t\tt = timer(sec * 1000, sec * 1000);\n\t\t}\n\t\telse {\n\t\t\tt = timer(0, sec * 1000);\n\t\t}\n\t\tthis.timers[name] = { second: sec, t: t };\n\t\treturn true;\n\t}\n\tnewTimerCD(name: string, sec: number, delay: number = 0): boolean {\n\t\tif (name === undefined || sec === undefined || this.timers[name]) {\n\t\t\treturn false;\n\t\t}\n\t\tlet t: Observable<any>\n\t\tt = timer(delay * 1000, sec * 1000);\n\t\tthis.timers[name] = { second: sec, t: t };\n\t\treturn true;\n\t}\n\tnewTimerHR(name: string, msec: number, delay: number = 0): boolean {\n\t\tif (name === undefined || msec === undefined || this.timers[name]) {\n\t\t\treturn false;\n\t\t}\n\t\tlet t: Observable<any>\n\t\tt = timer(delay, msec);\n\t\tthis.timers[name] = { second: msec, t: t };\n\t\treturn true;\n\t}\n\tdelTimer(name: string): boolean {\n\t\tif (name === undefined || !this.timers[name]) {\n\t\t\treturn false;\n\t\t}\n\t\tlet s = this.getSubscription();\n\t\t// unsubscribe all subscription for queue 'name'\n\t\ts.forEach(i => {\n\t\t\tif (this.subscription[i].name === name) {\n\t\t\t\tthis.unsubscribe(i);\n\t\t\t}\n\t\t});\n\t\t// delete queue 'name' subject and observable\n\t\tdelete this.timers[name].t;\n\t\tdelete this.timers[name];\n\t}\n\t/**\n\t *\n\t * @param name\n\t * @param callback\n\t */\n\tsubscribe(name: string, callback: () => void): string {\n\t\tif (!this.timers[name]) {\n\t\t\treturn '';\n\t\t}\n\t\tlet id = name + '-' + UUID.UUID();\n\t\tthis.subscription[id] = {\n\t\t\tname: name,\n\t\t\tsubscription: this.timers[name].t.subscribe(callback)\n\t\t}\n\t\treturn id;\n\t}\n\t/**\n\t *\n\t * @param id\n\t */\n\tunsubscribe(id: string): boolean {\n\t\tif (!id || !this.subscription[id]) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.subscription[id].subscription.unsubscribe();\n\t\tdelete this.subscription[id];\n\t}\n}\n","/*\n * Public API Surface of ng2-simple-timer\n */\n\nexport * from './lib/ng2-simple-timer.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}